/// @brief Doxygen dummy class specifying the API available at different
///        layers
class layer
{
public:

    /// @typedef value_type
    /// The value type storing the field elements used for the
    /// specified field inherited from the Super class. E.g. the binary
    /// extension field 2^8 uses uint8_t as the value_type.
    typedef typename Super::value_type value_type;

    /// @brief Get the addition of two field elements
    /// @param First operand to add
    /// @param Second operand to add
    /// @return Addition result
    value_type add(value_type a, value_type b) const

    /// @brief Get the substraction of two field elements
    /// @param First operand to substract
    /// @param Second operand to substract
    /// @return Substraction result
    value_type subtract(value_type a, value_type b) const

    /// @brief Get the multiplication of two field elements
    /// @param First operand to multiply
    /// @param Second operand to multiply
    /// @return Multiplication result
    value_type multiply(value_type a, value_type b) const

    /// @brief Get the division of two field elements
    /// @param Numerator
    /// @param Denominator
    /// @return Division result
    value_type divide(value_type numerator, value_type denominator) const

    /// @brief Get the inverse of a field element
    /// @param Element to invert
    /// @return Inversion result
    value_type invert(value_type a) const
};
